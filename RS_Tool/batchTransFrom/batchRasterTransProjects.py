# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# 1.py
# Created on: 2021-01-19 16:57:10.00000
#   (generated by GaoSong)
# Description:批量影像坐标转换
# ---------------------------------------------------------------------------

# Import arcpy module
# import arcpy


# # Local variables:
# # 转4326
# v20190311_MASK_3bands_dat = "G:\\阜阳\\Data\\Result\\数据组使用\\Raster\\3bands_321\\20190311_MASK_3bands.dat"
# v1_tif = "G:\\阜阳\\Data\\Result\\数据组使用\\Raster\\10M\\4326\\1.tif"
#
# # Process: Project Raster
# # arcpy.ProjectRaster_management(v20190311_MASK_3bands_dat, v1_tif, "GEOGCS['GCS_WGS_1984',DATUM['D_WGS_1984',SPHEROID['WGS_1984',6378137.0,298.257223563]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]]", "NEAREST", "9.93536623384057E-05 9.93536623384057E-05", "", "", "PROJCS['WGS_1984_UTM_Zone_50N',GEOGCS['GCS_WGS_1984',DATUM['D_WGS_1984',SPHEROID['WGS_1984',6378137.0,298.257223563]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Transverse_Mercator'],PARAMETER['False_Easting',500000.0],PARAMETER['False_Northing',0.0],PARAMETER['Central_Meridian',117.0],PARAMETER['Scale_Factor',0.9996],PARAMETER['Latitude_Of_Origin',0.0],UNIT['Meter',1.0]]")
# out_coordinate_system = arcpy.SpatialReference(4326)
# arcpy.ProjectRaster_management(v20190311_MASK_3bands_dat, v1_tif, out_coordinate_system)

# coding=utf-8
# 批量处理文件夹内的所有shp数据的坐标转换
import os
import arcpy
import sys

baseFile = r"G:/shp/50"
inputDirName = '50'
outputDirName = '4326'


def transfrom(input_file, output_file):
    print('正在处理：', input_file)
    out_coordinate_system = arcpy.SpatialReference(4326)
    arcpy.ProjectRaster_management(input_file, output_file, out_coordinate_system)
    print('输出文件：', output_file)


def oswalk(file_dir):
    print(os.walk(file_dir))
    for root, dirs, files in os.walk(file_dir):
        for file in files:
            (filename, extension) = os.path.splitext(file)  # 将文件名拆分为文件名与后缀
            if (extension == '.tif'):
                path_filedir = '/'.join(root.split('\\'))
                path_array = path_filedir.split(inputDirName)
                output_file_name = path_array[0] + outputDirName + path_array[1].decode('gb2312')
                if not os.path.exists(output_file_name):
                    os.mkdir(output_file_name)
                output_file_shp = output_file_name + '/' + file
                input_file_shp = path_filedir.decode('gb2312') + '/' + file
                transfrom(input_file_shp, output_file_shp)


if __name__ == '__main__':
    oswalk(baseFile)
